version: '2'

networks:
  taturana:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 11.0.0.10/8

volumes:
  redis_data:
    driver: local
  s3_data:
    driver: local
  mongo_data:
    driver: local
  local_postgres_data:
    driver: local

services:
  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    networks:
      taturana:
    volumes:
      - mongo_data:/data/db
      - ./backups:/backups
    environment:
      MONGO_INITDB_DATABASE: taturana
      #MONGO_INITDB_ROOT_USERNAME: root
      #MONGO_INITDB_ROOT_PASSWORD: example

  redis:
    image: redis:latest # that's safe
    networks:
      taturana:

  fake-smtp:
    image: mailhog/mailhog
    environment:
      MH_HOSTNAME: fake-smtp.taturana
    ports:
    - 1025:1025/tcp
    - 4001:8025/tcp
    networks:
      taturana:
    labels:
      traefik.frontend.rule: Host:fake-smtp.taturana
      traefik.port: '8025'
      traefik.enable: 'true'

  traefik:
    image: traefik:1.7-alpine
    ports:
      - 80:80/tcp
      - 4002:8080/tcp
      - 443:443/tcp
    networks:
      taturana:
        ipv4_address: 11.0.0.50
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.toml:/etc/traefik/traefik.toml
    labels:
      traefik.frontend.rule: Host:traefik.taturana
      traefik.port: '8080'
      traefik.enable: 'true'

  images:
    image: h2non/imaginary
    stdin_open: true
    tty: true
    ports:
    - 4003:9000/tcp
    volumes:
      - ./uploads:/uploads
    networks:
      taturana:
    command:
    - -cors
    - -gzip
    - -concurrency
    - '10'
    - -enable-url-source
    - -mount
    - /uploads
    labels:
      traefik.frontend.rule: Host:images.taturana
      traefik.enable: 'true'
      traefik.port: '9000'

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 4005:8081
    networks:
      taturana:
    labels:
      traefik.frontend.rule: Host:mongo-express.taturana
      traefik.port: '8081'
      traefik.enable: 'true'